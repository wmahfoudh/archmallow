# Options section
setopt correct                   # Auto correct mistakes
setopt extendedglob              # Extended globbing (regex with *)
setopt nocaseglob                # Case insensitive globbing
setopt rcexpandparam             # Array expansion with parameters
setopt nocheckjobs               # Don't warn about running processes when exiting
setopt numericglobsort           # Sort filenames numerically when it makes sense
setopt nobeep                    # No beep
setopt appendhistory             # Immediately append history instead of overwriting
setopt histignorealldups         # If a new command is a duplicate, remove the older one
setopt autocd                    # If only directory path is entered, cd there.
setopt prompt_subst              # Enable substitution for prompt

# History settings
HISTFILE=~/.zhistory
HISTSIZE=5000000
SAVEHIST=5000000

# Completion settings
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'        # Case insensitive tab completion
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"          # Colored completion (dirs/files/etc)
zstyle ':completion:*' rehash true                               # Automatically find new executables in path
zstyle ':completion:*' accept-exact '*(N)'
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache

# Word characters setting
WORDCHARS=${WORDCHARS//\/[&.;]}  # Don't consider certain characters part of the word

# Keybindings section
bindkey -e
bindkey '^[[7~' beginning-of-line
bindkey '^[[H' beginning-of-line
[[ -n "${terminfo[khome]}" ]] && bindkey "${terminfo[khome]}" beginning-of-line
bindkey '^[[8~' end-of-line
bindkey '^[[F' end-of-line
[[ -n "${terminfo[kend]}" ]] && bindkey "${terminfo[kend]}" end-of-line
bindkey '^[[2~' overwrite-mode
bindkey '^[[3~' delete-char
bindkey '^[[C' forward-char
bindkey '^[[D' backward-char
bindkey '^[[5~' history-beginning-search-backward
bindkey '^[[6~' history-beginning-search-forward
bindkey '^[Oc' forward-word
bindkey '^[Od' backward-word
bindkey '^[[1;5D' backward-word
bindkey '^[[1;5C' forward-word
bindkey '^H' backward-kill-word
bindkey '^[[Z' undo
zmodload zsh/terminfo
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

# Alias section
alias cp="cp -i"              # Confirm before overwriting
alias df='df -h'              # Human-readable sizes
alias free='free -m'          # Show sizes in MB
alias ls='ls -Alh --color=auto --group-directories-first'
alias cmatrix='cmatrix -b -a -s'
alias reflect='sudo reflector --verbose --latest 200 --protocol http --protocol https --sort rate --save /etc/pacman.d/mirrorlist'

# Theming section
autoload -U compinit colors zcalc
compinit -d
colors

# Prompt settings
PROMPT="%(!.%{$fg[red]%}%n@%m %{$fg[yellow]%}(%T%) %{$fg[green]%}%1~>%{$reset_color%} .%{$fg[cyan]%}%n@%m %{$fg[yellow]%}(%T%) %{$fg[green]%}%1~>%{$reset_color%} )"
echo $(uname -srm)

# Git prompt settings
GIT_PROMPT_SYMBOL="%{$fg[blue]%}±"
GIT_PROMPT_PREFIX="%{$fg[green]%}["
GIT_PROMPT_SUFFIX="%{$fg[green]%}]%{$reset_color%}"
GIT_PROMPT_AHEAD="%{$fg[red]%}AHEAD%{$reset_color%}"
GIT_PROMPT_BEHIND="%{$fg[cyan]%}BEHIND%{$reset_color%}"
GIT_PROMPT_MERGING="%{$fg_bold[magenta]%}⚡︎%{$reset_color%}"
GIT_PROMPT_UNTRACKED="%{$fg_bold[red]%}●%{$reset_color%}"
GIT_PROMPT_MODIFIED="%{$fg_bold[yellow]%}●%{$reset_color%}"
GIT_PROMPT_STAGED="%{$fg_bold[green]%}●%{$reset_color%}"

parse_git_branch() {
  git symbolic-ref -q HEAD || git name-rev --name-only --no-undefined --always HEAD 2>/dev/null
}

parse_git_state() {
  local GIT_STATE=""
  local NUM_AHEAD="$(git log --oneline @{u}.. 2>/dev/null | wc -l | tr -d ' ')"
  ((NUM_AHEAD > 0)) && GIT_STATE+="${GIT_PROMPT_AHEAD//NUM/$NUM_AHEAD}"
  local NUM_BEHIND="$(git log --oneline ..@{u} 2>/dev/null | wc -l | tr -d ' ')"
  ((NUM_BEHIND > 0)) && GIT_STATE+="${GIT_PROMPT_BEHIND//NUM/$NUM_BEHIND}"
  [[ -n $(git rev-parse --git-dir 2>/dev/null) ]] && test -r $(git rev-parse --git-dir)/MERGE_HEAD && GIT_STATE+=$GIT_PROMPT_MERGING
  [[ -n $(git ls-files --other --exclude-standard 2>/dev/null) ]] && GIT_STATE+=$GIT_PROMPT_UNTRACKED
  ! git diff --quiet 2>/dev/null && GIT_STATE+=$GIT_PROMPT_MODIFIED
  ! git diff --cached --quiet 2>/dev/null && GIT_STATE+=$GIT_PROMPT_STAGED
  [[ -n $GIT_STATE ]] && echo "$GIT_PROMPT_PREFIX$GIT_STATE$GIT_PROMPT_SUFFIX"
}

git_prompt_string() {
  local git_where="$(parse_git_branch)"
  [ -n "$git_where" ] && echo "$GIT_PROMPT_SYMBOL$(parse_git_state)$GIT_PROMPT_PREFIX%{$fg[yellow]%}${git_where#(refs/heads/|tags/)}$GIT_PROMPT_SUFFIX"
  [ ! -n "$git_where" ] && echo "%{$fg[red]%} %(?..[%?])"
}

RPROMPT='$(git_prompt_string)'

# Color man pages
export LESS_TERMCAP_mb=$'\E[01;32m'
export LESS_TERMCAP_md=$'\E[01;32m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;47;34m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;36m'
export LESS=-r

# Plugins section
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/share/zsh/plugins/zsh-history-substring-search/zsh-history-substring-search.zsh
source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#111111,bg=yellow,bold,underline"

# Path setting
export PATH="/home/$USER/bin:$PATH"
